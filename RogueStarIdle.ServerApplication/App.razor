@using RogueStarIdle.ServerApplication.Shared.State;
@inject TimeState timeState;
@inject InventoryState inventoryState;
@inject ActionState exploringingState;
@inject CharacterState characterState;

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>


@code {
    protected override void OnInitialized()
    {
        if (characterState.Party.Count == 0)
        {
            characterState.Party.Add(characterState.MainCharacter);
            characterState.Party.Add(characterState.SideCharacters[0]);
            characterState.Party.Add(characterState.SideCharacters[1]);
            characterState.Party.Add(characterState.SideCharacters[2]);
            characterState.Party.Add(characterState.SideCharacters[3]);
        }
        characterState.Party.ForEach(c => c.Equipment.CalculateStats(c));
        characterState.Party.ForEach(c => c.CurrentHealth = c.Equipment.Stats.MaxHealth);
        characterState.SelectedCharacter = characterState.MainCharacter;

        base.OnInitialized();
    }
}