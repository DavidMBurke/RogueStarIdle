@page "/equippedItems"
@using RogueStarIdle.ServerApplication.Shared.State;
@inject EquipmentState equipmentState

<div class="page-content-container">
    <div class="row" style="width:auto; height: 75px;">
        <div class="inventory-grid-container">
            <div class="equipment-row">
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BrainCybernetic1.Item?.Name, "Brain Cybernetic 1")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BrainCybernetic2.Item?.Name, "Brain Cybernetic 2")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BrainCybernetic3.Item?.Name, "Brain Cybernetic 3")</div>
                <div class="inventory-spacer"/>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.Droid.Item?.Name, "Droid")</div>
            </div>
            <div class="equipment-row">
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BodyCybernetic1.Item?.Name, "Body Cybernetic 1")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BodyCybernetic2.Item?.Name, "Body Cybernetic 2")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.BodyCybernetic3.Item?.Name, "Body Cybernetic 3")</div>
                <div class="inventory-spacer" />
                <div class="inventory-slot"> @displayEquipment(equipmentState.MainCharacterEquipment.Head.Item?.Name, "Head") </div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.DroidMod.Item?.Name, "Droid Mod")</div>
            </div>
            <div class="equipment-row">
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Neck.Item?.Name, "Neck")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
            </div>
            <div class="equipment-row">
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.LeftWeapon.Item?.Name, "Left Weapon")</div>
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.RightWeapon.Item?.Name, "Right Weapon")</div>
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Back.Item?.Name, "Back")</div>
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Chest.Item?.Name, "Chest")</div>
                <div class="inventory-slot locked">OmniLink Mod</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
            </div>
            <div class="equipment-row">
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.LeftWeaponMod1.Item?.Name, "Left Weapon Mod 1")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.RightWeaponMod1.Item?.Name, "Right Weapon Mod 1")</div>
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Hands.Item?.Name, "Hands")</div>
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Belt.Item?.Name, "Belt")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Stim.Item?.Name, "Stim")</div>
            </div>
            <div class="equipment-row">
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.LeftWeaponMod2.Item?.Name, "Left Weapon Mod 2")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.RightWeaponMod2.Item?.Name, "Right Weapon Mod 2")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Legs.Item?.Name, "Legs")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.HealthPack.Item?.Name, "Health Pack")</div>
            </div>
            <div class="equipment-row">
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.LeftWeaponMod3.Item?.Name, "Left Weapon Mod 3")</div>
                <div class="inventory-slot locked">@displayEquipment(equipmentState.MainCharacterEquipment.RightWeaponMod3.Item?.Name, "Right Weapon Mod 3")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Feet.Item?.Name, "Feet")</div>
                <div class="inventory-spacer" />
                <div class="inventory-spacer" />
                <div class="inventory-slot">@displayEquipment(equipmentState.MainCharacterEquipment.Explosive.Item?.Name, "Explosive")</div>
            </div>
        </div>
        <div class="column" style="border-left: 5px solid black; width:200px; display:flex; justify-content: center; padding: 0;">
            <div style="overflow-y:scroll; height: 260px; border-bottom: 5px solid black;">
                <div class="equipped-items-character">Main Character</div>
                <div class="equipped-items-character">Companion 1</div>
                <div class="equipped-items-character">Companion 2</div>
                <div class="equipped-items-character">Companion 3</div>
                <div class="equipped-items-character">Companion 4</div>
                <div class="equipped-items-character">Companion 5</div>
                <div class="equipped-items-character">Companion 6</div>                
                <div class="equipped-items-character">Companion 7</div>
                <div class="equipped-items-character">Companion 8</div>
                <div class="equipped-items-character">Companion 9</div>
            </div>
            <div style="border: 2px solid black; background-color: cornflowerblue; height: 263px; margin-bottom: 3px; overflow-y: scroll;">
                @calculateStats(equipmentState.MainCharacterEquipment)
            </div>

        </div>
    </div>
</div>


@code {
    private string displayEquipment(string itemName, string slotName)
    {
        if (string.IsNullOrEmpty(itemName))
        {
            return slotName;
        }
        return itemName;
    }

    private MarkupString calculateStats(EquipmentSet equipment)
    {
        int minDamage = 0;
        int maxDamage = 0;
        int energyDefense = 0;
        int kineticDefense = 0;
        int psychicDefense = 0;
        int meleeDefense = 0;
        int rangedDefense = 0;
        int explosiveDefense = 0;
        int energyDR = 0;
        int fireDR = 0;
        int acidDR = 0;
        int poisonDR = 0;
        int shockDR = 0;
        int kineticDR = 0;
        int piercingDR = 0;
        int crushingDR = 0;
        int slashingDR = 0;
        int psychicDR = 0;
        foreach (var property in typeof(EquipmentSet).GetProperties())
        {
            if (property.PropertyType == typeof(EquipmentSlot))
            {
                EquipmentSlot slot = (EquipmentSlot)property.GetValue(equipment);
                if (slot.Item != null)
                {
                    minDamage += slot.Item.MinBaseDamage;
                    maxDamage += slot.Item.MaxBaseDamage;
                    energyDefense += slot.Item.EnergyDefense;
                    kineticDefense += slot.Item.KineticDefense;
                    psychicDefense += slot.Item.PsychicDefense;
                    meleeDefense += slot.Item.MeleeDefense;
                    rangedDefense += slot.Item.RangedDefense;
                    explosiveDefense += slot.Item.ExplosiveDefense;
                    energyDR += slot.Item.EnergyDamageReduction;
                    fireDR += Math.Max(slot.Item.EnergyDamageReduction, slot.Item.FireDamageReduction);
                    acidDR += Math.Max(slot.Item.EnergyDamageReduction, slot.Item.AcidDamageReduction);
                    poisonDR += Math.Max(slot.Item.EnergyDamageReduction, slot.Item.PoisonDamageReduction);
                    shockDR += Math.Max(slot.Item.EnergyDamageReduction, slot.Item.ShockDamageReduction);
                    kineticDR += slot.Item.KineticDamageReduction;
                    piercingDR += Math.Max(slot.Item.KineticDamageReduction, slot.Item.PiercingDamageReduction);
                    crushingDR += Math.Max(slot.Item.KineticDamageReduction, slot.Item.CrushingDamageReduction);
                    slashingDR += Math.Max(slot.Item.KineticDamageReduction, slot.Item.SlashingDamageReduction);
                    psychicDR += slot.Item.PsychicDamageReduction;
                }
            }
        }
        string markup = "";
        markup = $"<p>Damage: {minDamage} - {maxDamage}</p>";
        if (kineticDefense > 0)
            markup += $"<p>Kinetic Defense: {kineticDefense}</p>";
        if (energyDefense > 0)
            markup += $"<p>Energy Defense: {energyDefense}</p>";
        if (psychicDefense > 0)
            markup += $"<p>Psychic Defense: {psychicDefense}</p>";
        if (meleeDefense > 0)
            markup += $"<p>Melee Defense: {meleeDefense}</p>";
        if (rangedDefense > 0)
            markup += $"<p>Ranged Defense: {rangedDefense}</p>";
        if (explosiveDefense > 0)
            markup += $"<p>Explosive Defense: {explosiveDefense}</p>";
        if (energyDR > 0)
            markup += $"<p>Energy Damage Resistance: {energyDR}%</p>";
        if (fireDR > 0 && fireDR > energyDR)
            markup += $"<p>Fire Damage Resistance: {fireDR}%</p>";
        if (acidDR > 0 && acidDR > energyDR)
            markup += $"<p>Acid Damage Resistance: {acidDR}%</p>";
        if (poisonDR > 0 && poisonDR > energyDR)
            markup += $"<p>Poison Damage Resistance: {poisonDR}%</p>";
        if (shockDR > 0 && shockDR > energyDR)
            markup += $"<p>Shock Damage Resistance: {shockDR}%</p>";
        if (kineticDR > 0)
            markup += $"<p>Kinetic Damage Resistance: {kineticDR}%</p>";
        if (piercingDR > 0 && piercingDR > kineticDR)
            markup += $"<p>Piercing Damage Resistance: {piercingDR}%</p>";
        if (slashingDR > 0 && slashingDR > kineticDR)
            markup += $"<p>Slashing Damage Resistance: {slashingDR}%</p>";
        if (crushingDR > 0 && crushingDR > kineticDR)
            markup += $"<p>Piercing Damage Resistance: {crushingDR}%</p>";
        if (psychicDR > 0)
            markup += $"<p>Psychic Damage Resistance: {psychicDR}%</p>";
        return new MarkupString(markup);
    }
}
