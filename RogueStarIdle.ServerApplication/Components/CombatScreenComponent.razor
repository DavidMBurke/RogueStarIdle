@using RogueStarIdle.ServerApplication.Shared.State;
@using System.Diagnostics;
@inject InventoryState inventoryState;
@inject CombatState combatState;
@inject CharacterState characterState;

<div style="border:solid 2px black; height:270px; width:480px;">
    <div class="row" style="height:100%; padding: 0; padding-bottom: 5%;">
        <div style="height:100%; width:45%; margin: 0; padding: 0; display: flex; align-items: flex-end; justify-content: flex-end;">
            <div class="column">
                <div class="row">
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 1)) size="50" />
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 0)) size="50" />
                </div>
                <div class="row" style="margin-top: -25%">
                    <div style="height: 50%; width: 25%"/>
                    <CombatCharacterComponent character=@(characterState.MainCharacter ?? null) size="50" />
                    <div style="height: 50%; width: 25%" />
                </div>
                <div class="row" style="margin-top: -25% ">
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 3)) size="50" />
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 2)) size="50" />
                </div>
            </div>
        </div>
        <div style="height:100%; width: 10%;"/>
        <div style="height:100%; width:45%; margin: 0; padding: 0; display: flex; align-items: flex-end; justify-content: flex-start;">
            <div class="column">
                <div class="row">
                    <CombatEnemyComponent mob=@(combatState.SpawnedMobs.ElementAtOrDefault(0)?.Mob ?? null) size="50" />
                    <CombatEnemyComponent mob=@(combatState.SpawnedMobs.ElementAtOrDefault(0)?.Mob ?? null) size="50" />
                </div>
                <div class="row" style="margin-top: -25%">
                    <div style="height: 50%; width: 25%"/>
                    <CombatEnemyComponent mob=@(combatState.SpawnedMobs.ElementAtOrDefault(0)?.Mob ?? null) size="50" />
                    <div style="height: 50%; width: 25%" />
                </div>
                <div class="row" style="margin-top: -25%">
                    <CombatEnemyComponent mob=@(combatState.SpawnedMobs.ElementAtOrDefault(0)?.Mob ?? null) size="50" />
                    <CombatEnemyComponent mob=@(combatState.SpawnedMobs.ElementAtOrDefault(0)?.Mob ?? null) size="50" />
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    protected override async Task OnInitializedAsync()
    {
        combatState.OnChange += UpdateState;
        await base.OnInitializedAsync();
    }

    async Task UpdateState()
    {
        await InvokeAsync(StateHasChanged);
    }

    public Character? GetCharacterOrNull (List<Character> characters, int i)
    {
        if (i > characters.Count() - 1)
        {
            return null;
        }
        return characters[i];
    }
}