@using RogueStarIdle.ServerApplication.Shared.State;
@using System.Diagnostics;
@inject InventoryState inventoryState;
@inject CombatState combatState;
@inject CharacterState characterState;

<div class="combat-screen-wrapper">
    <div class="combat-screen" style="background-image: url(@backgroundImage)">
        <div class="combat-screen-half">
            <div class="column">
                <div class="combat-row">
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 1)) size="50" />
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 0)) size="50" />
                </div>
                <div class="combat-row">
                    <div class="combat-row-spacer" />
                    <CombatCharacterComponent character=@(characterState.MainCharacter ?? null) size="50" />
                    <div class="combat-row-spacer" />
                </div>
                <div class="combat-row">
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 3)) size="50" />
                    <CombatCharacterComponent character=@(GetCharacterOrNull(characterState.Characters, 2)) size="50" />
                </div>
            </div>
        </div>
        <div class="combat-screen-divider"/>
        <div class="combat-screen-half">
            <div class="column">
                <div class="combat-row">
                    <CombatEnemyComponent mob=@(GetMobOrNull(combatState.SpawnedMobs, 2)) size="50" />
                    <CombatEnemyComponent mob=@(GetMobOrNull(combatState.SpawnedMobs, 1)) size="50" />
                </div>
                <div class="combat-row">
                    <div class="combat-row-spacer" />
                    <CombatEnemyComponent mob=@(GetMobOrNull(combatState.SpawnedMobs, 0)) size="50" />
                    <div class="combat-row-spacer"/>
                </div>
                <div class="combat-row">
                    <CombatEnemyComponent mob=@(GetMobOrNull(combatState.SpawnedMobs, 4)) size="50" />
                    <CombatEnemyComponent mob=@(GetMobOrNull(combatState.SpawnedMobs, 3)) size="50" />
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    string backgroundImage = "/Images/Backgrounds/AzuraliPlainsClearing.png";

    protected override async Task OnInitializedAsync()
    {
        combatState.OnChange += UpdateState;
        await base.OnInitializedAsync();
    }

    async Task UpdateState()
    {
        await InvokeAsync(StateHasChanged);
    }

    public Character? GetCharacterOrNull (List<Character> characters, int i)
    {
        if (i > characters.Count() - 1)
        {
            return null;
        }
        return characters[i];
    }

    public Mob? GetMobOrNull(List<MobSpawn> mobs, int i)
    {
        if (i > mobs.Count() - 1)
        {
            return null;
        }
        return mobs[i].Mob;
    }
}