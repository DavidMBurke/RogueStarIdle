@inject IViewItemsByNameUseCase ViewItemsByNameUseCase
@inject IViewItemsByTagUseCase ViewItemsByTagUseCase
@using RogueStarIdle.ServerApplication.Shared.State;
@inject CharacterState characterState;

<div class="column" style="height:75%; width:100%; overflow-y: scroll;">

    <h6>
        @{
            Character character = characterState.mainCharacter;
        }
        Animals: level: @character.AnimalsSkill.Level  xp: @character.AnimalsSkill.Xp / @character.AnimalsSkill.GetXpForNextLevel()
    </h6>

    @foreach(var property in typeof(Character).GetProperties())
    {
        if (property.PropertyType != typeof(Skill))
        {
            continue;
        }
        Skill skill = property.GetValue(character) as Skill;
        <div class="row">
            <text>@skill.Name: Level: @skill.Level  XP: @skill.Xp / @skill.GetXpForNextLevel()</text><br/>
            <button style="width:100px" @onclick="()=>skill.LevelUp()"> +1 Level</button>
            <button style="width:100px" @onclick="()=>multiLevelUp(skill, 10)"> +10 Level</button>
        </div>
    }
</div>


@code {
    private void multiLevelUp(Skill skill, int num)
    {
        for (int i = 0; i < num; i++)
        {
            skill.LevelUp();
        }
    }
}
